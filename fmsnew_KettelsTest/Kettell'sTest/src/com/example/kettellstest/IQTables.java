package com.example.kettellstest;

public class IQTables {

	static public final int VERY_LOW_IQ = 30;
	static public final int VERY_HIGH_IQ = 200;
	
	static int [][] iqTable = {
/* ....-9.0  */			{53, 55, 56, 58, 60, 61, 63, 64, 66, 67, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 100, 101, 102, 103, 104, 106, 108, 110, 112, 114, 115, 116, 118, 119, 121, 122, 124, 126, 128, 130, 134, 135, 137, 140, 145, 147, 148, 150},
/* 9.1-9.6	 */			{53, 55, 56, 58, 59, 61, 62, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 100, 102, 103, 105, 106, 108, 109, 111, 112, 114, 116, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 148, 151},
/* 9.7-10.6  */			{53, 55, 57, 58, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 99, 100, 102, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150},
/* 10.7-11.6 */			{53, 55, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 97, 99, 100, 102, 103, 104, 106, 107, 109, 110, 112, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 148, 151, 155},
/* 11.7-13.0 */			{54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 103, 104, 106, 108, 110, 111, 113, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 141, 144, 147, 150},
/* 13.1-15.0 */			{53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 99, 101, 102, 103, 105, 107, 108, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 132, 134, 136, 139, 142, 145, 148, 150, 153},
/* 15.1-18.0 */			{53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 98, 99, 101, 102, 104, 106, 107, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 139, 143, 146, 149, 152},
/* 18.0-.... */			{53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 98, 100, 101, 102, 104, 105, 106, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 136, 140, 143, 146, 149}
			};
	static double [] ageId = {9.0, 9.6, 10.6, 11.6, 13.0, 15.0, 18.0};
	static int [] scoreShift = {9, 12, 14, 17, 19, 19, 20, 21};
	
	static public int getIQ(double age, int score) {
		int aId = 0;
		while (aId < ageId.length && ageId[aId] <= age) {
			aId++;
		}
		if (score < scoreShift[aId]) return VERY_LOW_IQ;
		if (score > scoreShift[aId] + iqTable[aId].length) return VERY_HIGH_IQ;
		return iqTable[aId][score - scoreShift[aId]];
	}
	
}
